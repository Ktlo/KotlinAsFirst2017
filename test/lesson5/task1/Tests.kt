package lesson5.task1

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test

class Tests {
    @Test
    @Tag("Example")
    fun timeStrToSeconds() {
        assertEquals(36000, timeStrToSeconds("10:00:00"))
        assertEquals(41685, timeStrToSeconds("11:34:45"))
        assertEquals(86399, timeStrToSeconds("23:59:59"))
    }

    @Test
    @Tag("Example")
    fun twoDigitStr() {
        assertEquals("00", twoDigitStr(0))
        assertEquals("09", twoDigitStr(9))
        assertEquals("10", twoDigitStr(10))
        assertEquals("99", twoDigitStr(99))
    }

    @Test
    @Tag("Example")
    fun timeSecondsToStr() {
        assertEquals("10:00:00", timeSecondsToStr(36000))
        assertEquals("11:34:45", timeSecondsToStr(41685))
        assertEquals("23:59:59", timeSecondsToStr(86399))
    }

    @Test
    @Tag("Normal")
    fun dateStrToDigit() {
        assertEquals("15.07.2016", dateStrToDigit("15 июля 2016"))
        assertEquals("", dateStrToDigit("3 мартобря 1918"))
        assertEquals("18.11.2018", dateStrToDigit("18 ноября 2018"))
        assertEquals("", dateStrToDigit("23"))
        assertEquals("03.04.2011", dateStrToDigit("3 апреля 2011"))
    }

    @Test
    @Tag("Normal")
    fun dateDigitToStr() {
        assertEquals("15 июля 2016", dateDigitToStr("15.07.2016"))
        assertEquals("", dateDigitToStr("01.02.20.19"))
        assertEquals("", dateDigitToStr("28.00.2000"))
        assertEquals("3 апреля 2011", dateDigitToStr("03.04.2011"))
        assertEquals("", dateDigitToStr("ab.cd.ef"))
    }

    @Test
    @Tag("Normal")
    fun flattenPhoneNumber() {
        assertEquals("+79211234567", flattenPhoneNumber("+7 (921) 123-45-67"))
        assertEquals("123456798", flattenPhoneNumber("12 --  34- 5 -- 67 -98"))
        assertEquals("", flattenPhoneNumber("ab-123"))
        assertEquals("+12345", flattenPhoneNumber("+12 (3) 4-5"))
        assertEquals("", flattenPhoneNumber("134_+874"))
    }

    @Test
    @Tag("Normal")
    fun bestLongJump() {
        assertEquals(717, bestLongJump("706 % - 717 - 703"))
        assertEquals(-1, bestLongJump("% - - % -"))
        assertEquals(754, bestLongJump("700 717 707 % 754"))
        assertEquals(-1, bestLongJump("700 + 700"))
        assertEquals(126158686, bestLongJump("126158686  %    %"))

        assertEquals(2147483647, bestLongJump("- - 1157807747 - 0 988212561 1 -  1 2147483647  131759119 - 1833045925 %  -  -  - - - 623738412 0 -  0 1     0 -  -   - % 1005777758 % % - - -  -  %  -  1   - -   - 2147483647 -   - - - - -  -   -   -     2147483647 1223473474 % 0 0 %     748146118    %  -  -    -  %  %  -  2147483647 %  1    1749174132   - 337422621  -   -  % 1958171319   -   0 -  -    - - % % - - 412139443  2147483647 % -      1442693735 2092178391 0 %   1155190171 -  - - -  - - 0  0 - 0    2147483647   237158775 - - % 1030550407 -   -   - -  1 2147483647 -  - 786244163 -  % 0 - %  % % 1 1404680169 2147483647    697077755 1943787595   -  527155182 0 - 724396640 -  - -    200795664 2147483647    - - - % %  498277018 % -  1 -  %    - -  2147483647 0 2147483647  - -  2053210863   % - 1 107015252 - - 2147483647 %    - 2147483647   -   - 2147483647 - % 1611338654    - - -  -  1888935415   % - -  0 - - 806067979    675266717   -   0  - % - - 0   1245552353 0 508968590  -  423170010  %  - - 576409779  %     0  % 2147483647   -   1603475121   %  %  % - -   2147483647 1856090509  1411112229 - 2147483647 0  1   %   % 330683415 % 1811023775 2147483647 - -  1753685090 2183763  328342202  1622707475 2147483647 % 1477027697  % % % %      0 -  - 0   % %  734324052 - 2147483647 2112003999  %   1825642614 1585691582 -   - 0  - -  -   1  %   746764794  % % -  %    %  - 2147483647 % % % -  -     2147483647  - -   - %    -    228395803 1 2147483647  -  -  - 2147483647 - -  374875422 % 524354188 -    1 - -  -  % 1057442604 - - -  -  -  - - 2147483647  0  % 0 % %   % - % %   -   921372230 2147483647  762461691   1319651100 - 1 308463635 2147483647 48134131 -  1  1192307522 1003728889     -  %  - - 2147483647 - - - - -  611384405 % %  684062730 %  % %  594174019 -    - -  - 547345493 -   -    -  1  - 1067016729 %  % 0  0  0 -  1 1 2147483647     2147483647 2147483647   - - - 2147483647       % 1580408683 - % -  2147483647  - 1  - 1296577664 985207830 395680094   188806794 - -  -     496971990  - 1799198451  % - 1504818008  - 512841243 2147483647 -  -  0   - -  - - -  1373792211  - - - % 1842017317 124043786 -    -   -  1    - % -  2147483647 - 2147483647 377226685 0  - % %   2147483647  1136784932 - 1858315413   - %  -   - 2147483647   2147483647 -  -   - 2052050405 1 %  -  % - 1    -  775594888 %   % 1959890452 2147483647 151960357 % % - 2147483647 2147483647 -   2147483647  1    856603831 1 0 -  1 2147483647 - 1179548393 - 1  % 1751689824 % 1 %  -  843135055   -  -  - 1     - 2147483647  1   1  1967117884 1   %   -     606657296   -   - -  % 1470027341 884483260 1307587129 638837278  % - % 1699906500 2147483647  1  2113009204 0   1006091534 - -     541999410     176784819 800839135  % - 0 1     -  1014612539  - % -  -  % %  0 % % - 811517187   1821405245 2147483647  1 2147483647 - 2147483647 255944966 1260504237  % 1 1916555409 345054934 -  % - -    - - 2147483647 -   %   0 584397434 - 2147483647 1  2147483647   1 - - - 1333436142  1 2147483647 - -   % %  - 2147483647   - -   - - 132553164  - 550321583 -  -  - - - 850368167 1505720662 1 - 919821933    1377518482  % 1242361838    - - 2147483647 0  2147483647 % 2147483647 949053391 - 1 929688918 588011840 1 -  2147483647  % %   1 1  % - -  1 - 1232107063 -    -    % 182070097 % -  % - 2147483647 - % 2147483647 0 %  712998697 1  2076240713 2147483647 - 1456124792 % -  - 1469437 - 2147483647 %    978371663 0 1227576225 16314448    1  2147483647  - 2147483647  %  -  - - 2147483647   - %  %  - %  1674941675  2147483647 396221506 0 -   %  - % %  1534773870    2147483647 - -   45911383   - 0   - 400364255   - -    2147483647 - 1720445281 - -    -  -   2135260649   284245404 0 - - - 2147483647 2147483647 1214163904 - -  - -  % - 0 - 646529435 419819063 - 2147483647   - 212601335   - 991454784 321654393  - - - - % 1452969977 0 % 2147483647 -   -  1936430757  % 1   % -   %   2147483647 - - %   %      %  1 - -   - - 1987455606 - 1872867486 - -  %  2147483647 2147483647  % % 900145715 % % 95923653 2147483647 -  % 1297021690 - 2111812611 2147483647 2147483647 1 -  -  - 1433180513 - -      2147483647 -   2147483647 291087319 -  -  1   - - 2147483647 - -  -  0  976349302 -  0 0  1   57092723 - % 2147483647  1077138017  1    - -  %   340163776   1250889491 -  % - 0 150018533 -  2147483647 - 260655886 0 -  - - - 0 504262753 - - 2147483647 %  - -  - - 1434525740   1760112554 1937615295 1 2147483647 -   -  -    1501765164 - 2147483647 - 1 - 2147483647 1  0 925993350 2147483647 % -  - 2147483647 986875111 0 - 2147483647   - - % - %   2147483647  0 % %  - 1680150646  - 991136301 2147483647 - -   - - 175269301  0  %  -  - - 1337416043 - 1 0 2147483647  %  - % 1776071837 - - - 0 2147483647  - %      -    2147483647 % - - 2147483647  -  242026174 %  956251058 % - %  %  - - % 2147483647 2147483647  - 1603170076  1045396524 % 803658035 1   1530726483  %    -  - % -   2147483647 % -   2147483647 1257995269 764134540 482875524 - - 1     % 2147483647  2147483647 0  1569560395 % 2009147867    1036788514 2147483647 2147483647 -   0 % 1577011586  - 1 1   % -  2147483647   % %  -     % - 1925493530   1024554738  -  - 2147483647  - 1  % 2147483647 - -  2147483647 -  -     %  % 690611466 426832860   2147483647 - 207526995   - -    1228915388 %   - 0 - %  %   - % % 2147483647 2147483647 -  % - 1943518584 -  %      1046757385 % -  - -  689659573 1 - -  2147483647  % 1179591279 409382582    % - 898066689  - -  -  - -   -  499318739 2147483647 2147483647  -    % 778571297 -  - 1857944397   0 2147483647     894294781    -  2147483647 621859417  % 2147483647 -     %  1860117007 - % 1 2147483647 %    - 2147483647 -  - - - - -  - 1213634079    - 2147483647   -     - - 1922212141 1885581012 % - -  1   % % 2147483647  - % 191169868  1403123518 215780393   2147483647  1  - 0 - 1 - 2147483647 1364164497 - 2147483647 1 2147483647 -  % - -  - - 1214089296      - - -  656677695  743567015  1133207529  2147483647 % - 1 0 - % %  %  -  1 - 2147483647  1641457524 %   2147483647  -  0       -  1445823342 % - - %  605051802  % - 0 -  2147483647    1037453592  % % - % -   0 0  2147483647  - %     - 1 % -  1 1189189499 -  -    - 0  934115750 - 2147483647 - 1 0   % %  %  %   - 0 2147483647   %   % 376961196   1 -   908684665    - -  % %    - 0  %  1 205516406   - - - 2147483647 -  -   % - -  617488317 2147483647 - 2147483647      98050114  - 405845001 1505641981 2147483647 1788548546 - 1  0  2147483647   2079728303   -  - 2147483647  1907984769  -  % 0  - 1109511749 - - - 0     % -  % %   2147483647 2147483647 -   %   % 0 2147483647 2147483647 - % 2147483647  %    0 -  %  1490796444 0 % - 337510300 -  %     - -  1 1218223662 - - -   2147483647 2028473929 2147483647   -    2147483647 -  % 0 % -  - 1 0   -   - - %  % %  %   1507225436 - - 2005638058    2147483647  2147483647 0  1201866836 -  0  1178372492   - 2147483647     2147483647 1267357104 520858160 -  - 2147483647 0 -    1741920526  1781190103 % -   -  - - 0 2147483647    -    1241519150   - 1451125785 - 1521303583 2147483647 267186431 1528148223  -   %  -   0 -  2147483647 1 162274864   -   - 1968975565 0 % % - 227543381 1  985953103  - 1 281721859  % % % 537870699 -  - - 2147483647  % - 1 %  % 2147483647 % 197278077   - 543723614 1488365840 1035876364 % -  2147483647 - %  566111219 -   - 0 2147483647   - 0 2147483647 1 - - 0   648877822  % 1935513169 -   - 38078137 981157155 1  - % 936507601   - - -  -   2074698847  1 %   % - - %  575945411  - 405678563   -   184184084  - 0 - - %  -   1898913377  -  - - 0   1 2147483647  % 2147483647 % - 2101745192 2147483647 -  - %    %    % %  2147483647 % 2147483647 2147483647    %   186879769  0   2079394966  - 1005704218 745013016  1  2147483647 1095509417 1940198308  %  1473773574 0 2147483647 - 1  1    -   2140401861   - 303332798   %  867934598 % 2147483647 -  - -  2147483647 -    -   1383208287 - 1 - 2147483647 -  275908112 - 1164928082   -   - 2147483647 1 995104661 % -   1 - 1648277098       -  - - 461423046  % % % % - 1409146694  1  %  -   -  - - - - %    % 2147483647 %      - 2147483647  0 -     - 2147483647 1400757800  % % 1858716271 -  -  1728008040 -    2127225713  2147483647 % - % 124993804 - 1638654386 - % 2147483647  503566691 2147483647 1476160449 0 902737132    - 763509441    1635737799 2147483647 - - 392357545 -   2147483647 -  2147483647 - - 2147483647  -      % -    -  -  - -  840168282 - - - - -  - 294936278 % - % - 0  2147483647  -    - % % % -  2147483647 %  1 % 1  2147483647   1     %   %  1886047252   - %   12666245 -  - -    - -  -   - 1016207040 726810523 1 %  %    1718320457 - -  - -  -   - - -  2907655 - -  1 - 2147483647   -    - - -     %   -  % %  - 0  1 %   % - % - 1632502128 1689769008 %  % 0  1197632076     - 2147483647 %   -     - 0 0 2147483647 394957181 0 1 - - 0   959289763  1 - 1 378966073 2147483647  2147483647  - 1011450115 % -  - 356248781  %  - 2147483647 2147483647  - 942361275 1873396881  -    % % % - 2147483647 - % % 2147483647 - % 0  -    713254873  1  2147483647 - 1086220071        2147483647 - 0  1047483366 - - 2147483647  -   1231382173  -   546467238   - 2147483647   987715427 2147483647 2098988902  2147483647 - 5637390  0 0   - -  1760091257 960513438  -   -  -   1293759867 -   - - -   -      2147483647  %   - % 184790722   2147483647 1847457489   1 1408205155 0  % - 2142915203 - 0 1  -  % - 2147483647 2147483647 % % 135956672  %   688912377 1 2147483647 2147483647 2147483647  - 1755390299  1543868050 1613575758   1  - -  0 - 1 1780671943  - - 2147483647   - -    2147483647 - - 2147483647 2147483647 - 2147483647   0 % % 2147483647 2147483647 % - 197465416 2147483647 0 112587882 -   604946755 - 792008512 %    0 - 0 % % - 0 1853015266  % 2147483647 0 - 2147483647  2147483647 -  - %   - 481860306 699674346 195086083 2147483647 % - - - 2147483647   1775233594  % -  -       1980681101 %      - -   1679784184 - 2147483647    - - 0 -  % 1  330433974 1163938544 - 1346687486  -  %   0 0   %   - -  - 2147483647 -  % -  2147483647 -  - - 1   - % - 572762747  0  13990753  % -   -  % % -  320970155 - -   % -  -   - % - % % 1523220987  - %   - - 678994807 758330033    % -    %   1  -     - - 1133496201 - 0  -  %  1 2147483647 1 0  0    2147483647 491807793 -  2147483647 - 1  - - 1241334913 -  %  - 925145254 - - %  1795665907 1 0 - %  %  - - - 1927430677  2147483647 %    2147483647 -    - 194712070  1645641678  - - % 2147483647  -  2147483647 1362074845  -       2147483647 1747586036 -  0 - 1  1  - 0 -   1634027303  -   741864060 2147483647 1378536381  %  -  729682311  -  -    % - 1  - 2147483647 % - 2147483647  % 577119872 1422886302 0 1227215816    305289263 - -   - - -   % 2147483647 1573176642 0 1336785038  - % 479946327  % - -  - 1 - -  - - % - - 1502765825  1495046892 1 - - %  1 % -  2147483647 715071023  % - -  - 1 % - - 79983201   - % %  2147483647 2147483647 1920376197 - - -   -   2147483647 132403573  - -     1559120076   -   % 64269371  1018787171 2147483647 2147483647  2147483647 % % % % - - %   2087117942  0  - -  1751675709  0   - 477067296 2147483647 - 0 1 2147483647 - %   %  2147483647 1188648281  % 0 -  0  - -  - 1  - 0 1400483575  2147483647 - % - 1140514825 1  346052788  2147483647    -  2147483647 0 - -   - 471855653  - -"))
    }

    @Test
    @Tag("Hard")
    fun bestHighJump() {
        assertEquals(226, bestHighJump("226 +"))
        assertEquals(-1, bestHighJump("???"))
        assertEquals(230, bestHighJump("220 + 224 %+ 228 %- 230 + 232 %%- 234 %"))

        assertEquals(-1, bestHighJump("0 %%-"))
    }

    @Test
    @Tag("Hard")
    fun plusMinus() {
        assertEquals(0, plusMinus("0"))
        assertEquals(4, plusMinus("2 + 2"))
        assertEquals(6, plusMinus("2 + 31 - 40 + 13"))
        assertEquals(-1, plusMinus("0 - 1"))
    }

    @Test
    @Tag("Hard")
    fun firstDuplicateIndex() {
        assertEquals(-1, firstDuplicateIndex("Привет"))
        assertEquals(9, firstDuplicateIndex("Он пошёл в в школу"))
        assertEquals(40, firstDuplicateIndex("Яблоко упало на ветку с ветки оно упало на на землю"))
        assertEquals(9, firstDuplicateIndex("Мы пошли прямо Прямо располагался магазин"))
    }

    @Test
    @Tag("Hard")
    fun mostExpensive() {
        assertEquals("", mostExpensive(""))
        assertEquals("Курица", mostExpensive("Хлеб 39.9; Молоко 62.5; Курица 184.0; Конфеты 89.9"))
        assertEquals("Вино", mostExpensive("Вино 255.0"))

        assertEquals("%Ii", lesson5.task1.mostExpensive("BiNJ|%_`fm*/y/N\"u7\"G^ei..LISK9F<L%e!r7cnv0CQj?8fzyftV\$d*2it8N=]$$<u(S!~*#ZP 0; %Ii 21474836.47"))
    }

    @Test
    @Tag("Hard")
    fun fromRoman() {
        assertEquals(1, fromRoman("I"))
        assertEquals(3000, fromRoman("MMM"))
        assertEquals(1978, fromRoman("MCMLXXVIII"))
        assertEquals(694, fromRoman("DCXCIV"))
        assertEquals(49, fromRoman("XLIX"))
        assertEquals(-1, fromRoman("Z"))
        assertEquals(-1, fromRoman(""))
    }

    @Test
    @Tag("Impossible")
    fun computeDeviceCells() {
        assertEquals(listOf(0, 0, 0, 0, 0, 1, 1, 1, 1, 1), computeDeviceCells(10, "+>+>+>+>+", 10000))
        assertEquals(listOf(-1, -1, -1, -1, -1, 0, 0, 0, 0, 0), computeDeviceCells(10, "<-<-<-<-<-", 10000))
        assertEquals(listOf(1, 1, 1, 1, 1, 0, 0, 0, 0, 0), computeDeviceCells(10, "- <<<<< +[>+]", 10000))
        assertEquals(listOf(0, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0),
                computeDeviceCells(11, "<<<<< + >>>>>>>>>> --[<-] >+[>+] >++[--< <[<] >+[>+] >++]", 10000))

        assertEquals(listOf(0, 0, 0, 0, 0, 1, 1, 0, 0, 0), computeDeviceCells(10, "+>+>+>+>+", 4))
        assertEquals(listOf(0, 0, -1, -1, -1, 0, 0, 0, 0, 0), computeDeviceCells(10, "<-<-<-<-<-", 6))
        assertEquals(listOf(1, 1, 1, 0, 0, -1, 0, 0, 0, 0), computeDeviceCells(10, "- <<<<< +[>+]", 17))
        assertEquals(listOf(0, 6, 5, 4, 3, 2, 1, 0, -1, -1, -2),
                computeDeviceCells(11, "<<<<< + >>>>>>>>>> --[<-] >+[>+] >++[--< <[<] >+[>+] >++]", 256))

        try {
            computeDeviceCells
        }
        catch (e: Exception) {
            if (IllegalArgumentException().javaClass.toString() !=  e.javaClass.toString())
                throw e
        }
    }
}